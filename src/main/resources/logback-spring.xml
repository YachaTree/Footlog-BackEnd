<configuration>
    <timestamp key="BY_DATE" datePattern="yyyy-MM-dd"/> <!-- BY_DATE라는 키를 이용해서 현재 날짜를 저장 -->
    <!-- LOG_PATTERN: 로그 메시지를 세부적으로 설정(날짜, 스레드이름, 로그 레벨, 클래스와 메서드 이름, 로그 메시지) -->
    <!-- %-4relative: 4자리 폭을 사용하여 정렬 -->
    <!-- %green([%thread]): 스레드의 이름을 초록색으로 표현 -->
    <!-- %highlight(%-5level): 로그 레벨을 5자리 폭으로 정렬, 강조 색상 적용 -->
    <!-- %boldWhite([%C.%M:%yellow(%L)]: 로그를 기록한 클래스의 이름(%C), 메서드의 이름(%M), 로그라인 번호(%L)를 출력-->
    <!-- - %msg: 로그 메시지를 출력 -->
    <!-- %n: 로그 메시지의 끝에 줄 바꿈을 추가 -->
    <property name="LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss}:%-4relative] %green([%thread]) %highlight(%-5level) %boldWhite([%C.%M:%yellow(%L)]) - %msg%n"/>


    <springProfile name="!prod"> <!-- 프로파일(특정 환경에 맞게 설정을 분리)에 맞는 로깅 설정: 개발(dev), 테스트(test), 운영(prod)-->
        <include resource="log-info-appender.xml"/>
        <include resource="file-info-appender.xml"/>
        <include resource="file-warn-appender.xml"/>
        <include resource="file-error-appender.xml"/>

        <root level="INFO"> <!-- 기본 출력 로그레벨 -->
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE-INFO"/>
            <appender-ref ref="FILE-WARN"/>
            <appender-ref ref="FILE-ERROR"/>
        </root>
    </springProfile>

</configuration>